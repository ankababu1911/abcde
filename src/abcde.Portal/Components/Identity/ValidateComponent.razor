@inject Microsoft.Extensions.Localization.IStringLocalizer<App> BaseLocale

<div class="row mt-5">
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h2>@BaseLocale["WelcomeTaskManagement"].Value</h2>
            <hr />
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam nec diam metus. Fusce tristique semper nisl rutrum pulvinar. Nullam at congue orci, nec malesuada ante. Proin et cursus ligula, vel facilisis sapien. Fusce et ornare lacus. Duis vulputate lectus nulla, id gravida quam bibendum mattis. Proin diam turpis, mollis eu sem posuere, pulvinar rhoncus turpis.</p>
        </section>
    </div>
    <div class="col-md-4">
        <section>
             <EditForm EditContext="editContext" OnValidSubmit="@(() => OnVerify.InvokeAsync(model))">
                <DataAnnotationsValidator />
                <h2>@BaseLocale["ValidateUser"].Value</h2>
                <hr />                
                <InputFormFloatingComponent Label="@BaseLocale["Email"].Value" @bind-Value="@model.EmailId" ValidationFor="@(() => model.EmailId)" />
                <InputFormFloatingComponent InputType="password" Label="@BaseLocale["Password"].Value" @bind-Value="@model.Password" ValidationFor="@(() => model.Password)" />
                <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary" disabled="@(DisabledButton)">
                    <span class="spinner-border spinner-border-sm spinner" style="display: @(SpinnerDisplay ?? "none")"></span> @BaseLocale["Validate"].Value
                </button>
                <abcde.ComponentLibrary.Shared.ErrorMessageDisplayComponent ErrorMessage="@ErrorMessage" />
            </EditForm>
        </section>
    </div>
</div>

@code {

    [Parameter]
    public string EncryptedOrganisationId { get; set; }

    [Parameter]
    public string ErrorMessage { get; set; }

    [Parameter]
    public EventCallback<VerifyOrganisation> OnVerify { get; set; }
    [Parameter]
    public string SpinnerDisplay { get; set; }
    [Parameter]
    public bool DisabledButton { get; set; }

    private VerifyOrganisation model;
    private EditContext editContext;

    /// <summary>
    /// Set up editcontext
    /// </summary>
    override protected void OnInitialized()
    {
        model = new VerifyOrganisation() { EncryptedOrganisationId = EncryptedOrganisationId };
        editContext = new EditContext(model);
    }
}
